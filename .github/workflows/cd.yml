name: Business Filings UI CD

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      environment:
        description: "Environment (dev/test/prod)"
        required: true
        default: "dev"

defaults:
  run:
    shell: bash

env:
  APP_NAME: "business-filings"
  TAG_NAME: "dev"

jobs:
  business-filings-cd-by-push:
    runs-on: ubuntu-20.04

    if: github.event_name == 'push' && github.repository == 'bcgov/business-filings-ui'
    environment:
      name: "dev"

    steps:
      - uses: actions/checkout@v3

      - name: Login Openshift
        shell: bash
        run: |
          oc login --server=${{secrets.OPENSHIFT4_LOGIN_REGISTRY}} --token=${{secrets.OPENSHIFT4_SA_TOKEN}}

      - name: CD Flow
        shell: bash
        env:
          OPS_REPOSITORY: ${{ secrets.OPS_REPOSITORY }}
          OPENSHIFT_DOCKER_REGISTRY: ${{ secrets.OPENSHIFT4_DOCKER_REGISTRY }}
          OPENSHIFT_SA_NAME: ${{ secrets.OPENSHIFT4_SA_NAME }}
          OPENSHIFT_SA_TOKEN: ${{ secrets.OPENSHIFT4_SA_TOKEN }}
          OPENSHIFT_REPOSITORY: ${{ secrets.OPENSHIFT4_REPOSITORY }}
          TAG_NAME: ${{ env.TAG_NAME }}
        run: |
          make cd

      - name: Watch new rollout (trigger by image change in Openshift)
        shell: bash
        run: |
          oc rollout status dc/${{ env.APP_NAME }}-${{ env.TAG_NAME }} -n ${{ secrets.OPENSHIFT4_REPOSITORY }}-${{ env.TAG_NAME }} -w

      - name: Rocket.Chat Notification
        uses: RocketChat/Rocket.Chat.GitHub.Action.Notification@master
        if: failure()
        with:
          type: ${{ job.status }}
          job_name: "*Business Filings UI Built and Deployed to ${{env.TAG_NAME}}*"
          channel: "#registries-bot"
          url: ${{ secrets.ROCKETCHAT_WEBHOOK }}
          commit: true
          token: ${{ secrets.GITHUB_TOKEN }}

  business-filings-cd-by-dispatch:
    runs-on: ubuntu-20.04

    if: github.event_name == 'workflow_dispatch' && github.repository == 'bcgov/business-filings-ui'
    environment:
      name: "${{ github.event.inputs.environment }}"

    steps:
      - uses: actions/checkout@v3
      - name: Set env by input
        run: |
          echo "TAG_NAME=${{ github.event.inputs.environment }}" >> $GITHUB_ENV

      - name: Login Openshift
        shell: bash
        run: |
          oc login --server=${{secrets.OPENSHIFT4_LOGIN_REGISTRY}} --token=${{secrets.OPENSHIFT4_SA_TOKEN}}

      - name: CD Flow
        shell: bash
        env:
          OPS_REPOSITORY: ${{ secrets.OPS_REPOSITORY }}
          OPENSHIFT_DOCKER_REGISTRY: ${{ secrets.OPENSHIFT4_DOCKER_REGISTRY }}
          OPENSHIFT_SA_NAME: ${{ secrets.OPENSHIFT4_SA_NAME }}
          OPENSHIFT_SA_TOKEN: ${{ secrets.OPENSHIFT4_SA_TOKEN }}
          OPENSHIFT_REPOSITORY: ${{ secrets.OPENSHIFT4_REPOSITORY }}
          TAG_NAME: ${{ env.TAG_NAME }}
        run: |
          make cd

      - name: Watch new rollout (trigger by image change in Openshift)
        shell: bash
        run: |
          oc rollout status dc/${{ env.APP_NAME }}-${{ env.TAG_NAME }} -n ${{ secrets.OPENSHIFT4_REPOSITORY }}-${{ env.TAG_NAME }} -w

      - name: Rocket.Chat Notification
        uses: RocketChat/Rocket.Chat.GitHub.Action.Notification@master
        if: failure()
        with:
          type: ${{ job.status }}
          job_name: "*Business Filings UI Built and Deployed to ${{env.TAG_NAME}}*"
          channel: "#registries-bot"
          url: ${{ secrets.ROCKETCHAT_WEBHOOK }}
          commit: true
          token: ${{ secrets.GITHUB_TOKEN }}
